kind: Template
apiVersion: "v1"
metadata: 
  name: "gomr-mysql"
  annotations: 
    description: "An irc bot, written in go, using a mysql database"
    tags: "instant-app,irc"
    iconClass: "icon-golang"
labels: 
  template: "gomr-mysql"
objects: 
  - kind: ImageStream
    apiVersion: "v1"
    metadata: 
      name: "${NAME}-openshift"
      annotations: 
        description: "Keeps track of changes in the application image"
  - kind: BuildConfig
    apiVersion: "v1"
    metadata: 
      name: "${NAME}"
      annotations: 
        description: "Gomr build config."
    spec: 
      source: 
        type: "Git"
        git: 
          uri: "${SOURCE_REPOSITORY_URL}"
          ref: "${SOURCE_REPOSITORY_REF}"
      strategy: 
        type: "Docker"
      output: 
        to: 
          kind: ImageStreamTag
          name: "${NAME}-openshift:latest"
      triggers: 
        - type: "ConfigChange"
        - type: "GitHub"
          github: 
            secret: "${GITHUB_WEBHOOK_SECRET}"
  - kind: DeploymentConfig
    apiVersion: "v1"
    metadata: 
      name: "${NAME}"
    spec: 
      strategy: 
        type: "Recreate"
      triggers: 
        - type: "ImageChange"
          imageChangeParams: 
            automatic: true
            containerNames: 
              - "${NAME}"
            from: 
              kind: ImageStreamTag
              name: "${NAME}-openshift:latest"
        - type: "ConfigChange"
      replicas: 1
      selector: 
        name: "${NAME}"
      template: 
        metadata: 
          name: "${NAME}"
          labels: 
            name: "${NAME}"
        spec: 
          containers: 
            - name: "${NAME}"
              image: "${NAME}-openshift"
              ports: []
              env: 
                - name: "DATABASE_SERVICE_NAME"
                  value: "${NAME}_DATABASE"
                - name: "MYSQL_USER"
                  value: "${DATABASE_USER}"
                - name: "MYSQL_PASSWORD"
                  value: "${DATABASE_PASSWORD}"
                - name: "MYSQL_DATABASE"
                  value: "${DATABASE_NAME}"
              command:
              - /go/bin/gomr
              - --logtostderr=true
              - --v=10
              - --host=${SERVER_HOSTNAME}
              - --port=${SERVER_PORT}
              - --nick=${NICK}
              - --channel=${SERVER_CHANNEL}
              - --password=${CHANNEL_PASSWORD}
              - --source=${SOURCE_LINK}
              - --wordnikapikey=${WORDNIK_API_KEY}
  - kind: Service
    apiVersion: "v1"
    metadata: 
      name: "${NAME}-database"
      annotations: 
        description: "Exposes the database server"
    spec: 
      ports: 
        - name: "mysql"
          port: 3306
          targetPort: 3306
      selector: 
        name: "${NAME}-database"
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: "${NAME}-pv"
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"
  - kind: DeploymentConfig
    apiVersion: "v1"
    metadata: 
      name: "${NAME}-database"
      annotations: 
        description: "Defines how to deploy the database"
    spec: 
      strategy: 
        type: "Recreate"
      triggers: 
        - type: "ImageChange"
          imageChangeParams: 
            automatic: true
            containerNames: 
              - "mysql"
            from: 
              kind: ImageStreamTag
              namespace: "openshift"
              name: "mysql:5.7"
        - type: "ConfigChange"
      replicas: 1
      selector: 
        name: "${NAME}-database"
      template: 
        metadata: 
          name: "${NAME}-database"
          labels: 
            name: "${NAME}-database"
        spec: 
          containers: 
            - name: "mysql"
              image: " "
              ports: 
                - containerPort: 3306
              env: 
                - name: "MYSQL_USER"
                  value: "${DATABASE_USER}"
                - name: "MYSQL_PASSWORD"
                  value: "${DATABASE_PASSWORD}"
                - name: "MYSQL_RANDOM_ROOT_PASSWORD"
                  value: "yes"
                - name: "MYSQL_DATABASE"
                  value: "${DATABASE_NAME}"
              volumeMounts: 
                - name: "data"
                  mountPath: "/var/lib/mysql/data"
          volumes: 
            - name: "data"
              persistentVolumeClaim:
                claimName: "${NAME}-pv"
parameters: 
  - name: NAME
    description: "Name of resources and labels"
    value: "gomr"

  - name: SOURCE_REPOSITORY_URL
    description: "The URL of the repository with your application source code"
    value: "https://github.com/tiwillia/gomr.git"

  - name: SOURCE_REPOSITORY_REF
    description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch"
    value: "master"

  - name: GITHUB_WEBHOOK_SECRET
    description: "A secret string used to configure the GitHub webhook"
    generate: "expression"
    from: "[a-zA-Z0-9]{40}"

  - name: SERVER_HOSTNAME
    description: "Hostname of the irc server to connect to"
    required: true

  - name: SERVER_PORT
    description: "Port of the IRC server to connect to"
    value: "6667"

  - name: SERVER_CHANNEL
    description: "Channel for the IRC bot to join"
    value: "#test_channel"

  - name: CHANNEL_PASSWORD
    description: "Password to the IRC channel (if applicable)"
    value: ""

  - name: NICK
    description: "Nickname of the bot in IRC"
    value: "gomr"

  - name: WORDNIK_API_KEY
    description: "Wordnik api key for dictionary support"
    value: ""

  - name: SOURCE_LINK
    description: "Source link for contribution recommendations"
    value: "https://github.com/tiwillia/gomr"

  - name: DATABASE_USER
    description: "database username"
    generate: "expression"
    from: "user[A-Z0-9]{3}"

  - name: DATABASE_PASSWORD
    description: "database password"
    generate: "expression"
    from: "[a-zA-Z0-9]{8}"

  - name: DATABASE_NAME
    description: "database name"
    value: "gomrdb"

  - name: VOLUME_CAPACITY
    description: "Size of the database volume"
    value: "1Gi"
